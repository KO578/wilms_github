library(flexdashboard)
library(leaflet)
#library(leaflet.extras)
library(rgdal)
setwd("~/wilms_github/nel_wilms")
questions<-readOGR(".","questions")
questions<- spTransform(questions, CRS("+init=epsg:4326"))
gass_hydro<-readOGR(".","gass_hydro")
gass_hydro<- spTransform(gass_hydro, CRS("+init=epsg:4326"))
manitowoc_co_lidar_private<-readOGR(".","manitowoc_co_lidar_lakes_private")
manitowoc_co_lidar_private <- spTransform(manitowoc_co_lidar_private, CRS("+init=epsg:4326"))
lake_additions<-readOGR(".","lake_additions")
lake_additions<- spTransform(lake_additions, CRS("+init=epsg:4326"))
lakes_join<-read.csv("lake_attributes_join.csv")
lake_additions<-readOGR(".","lake_additions")
lake_additions<- spTransform(lake_additions, CRS("+init=epsg:4326"))
lake_additions<-merge(lake_additions,lakes_join,by="WBIC")
join<-read.csv("wiscland_join_info.csv",fileEncoding = 'UTF-8-BOM')
subbasin<-readOGR(".","subbasins")
subbasin <- spTransform(subbasin, CRS("+init=epsg:4326"))
cal_man_9KE<-readOGR(".","cal_man_9KE_onterra")
cal_man_9KE<- spTransform(cal_man_9KE, CRS("+init=epsg:4326"))
flow<-readOGR(".","flow")
flow <- spTransform(flow, CRS("+init=epsg:4326"))
buffer<-readOGR(".","laes_buffer")
buffer <- spTransform(buffer, CRS("+init=epsg:4326"))
manitowoc_co_lidar<-readOGR(".","manitowoc_co_lidar_lakes")
manitowoc_co_lidar <- spTransform(manitowoc_co_lidar, CRS("+init=epsg:4326"))
nel_boundary<-readOGR(".","nel_boundary")
nel_boundary<- spTransform(nel_boundary, CRS("+init=epsg:4326"))
septic_parcel<-readOGR(".","septic_parcel_status")
septic_parcel <- spTransform(septic_parcel, CRS("+init=epsg:4326"))
septic_pts<-readOGR(".","septic_pts_status")
septic_pts <- spTransform(septic_pts, CRS("+init=epsg:4326"))
swat_routing<-readOGR(".","swat_routing")
swat_routing <- spTransform(swat_routing, CRS("+init=epsg:4326"))
wiscland_wilms<-readOGR(".","wiscland_wilms_less")
wiscland_wilms <- spTransform(wiscland_wilms, CRS("+init=epsg:4326"))
wiscland_wilms<-merge(wiscland_wilms,join,by="GRIDCODE")
wiscland_wilms_updates<-readOGR(".","wiscland_wilms_updates")
wiscland_wilms_updates<- spTransform(wiscland_wilms_updates, CRS("+init=epsg:4326"))
impaired_lakes<-readOGR(".","impaired_lakes_2020")
impaired_lakes<- spTransform(impaired_lakes, CRS("+init=epsg:4326"))
impaired_lakes<-merge(impaired_lakes,lakes_join,by="WBIC")
impaired_streams<-readOGR(".","2018_2020_streams")
impaired_streams<- spTransform(impaired_streams, CRS("+init=epsg:4326"))
county<-readOGR(".","counties")
county<- spTransform(county, CRS("+init=epsg:4326"))
#wiscland, color
color<-c(rgb(170,0,0,.5,maxColorValue=255),
rgb(216,147,130,.5,maxColorValue=255),
rgb(242,238,134,.5,maxColorValue=255),
rgb(242,238,134,.5,maxColorValue=255),
rgb(242,238,134,.5,maxColorValue=255),
rgb(242,238,134,.5,maxColorValue=255),
rgb(230,226,161,.5,maxColorValue=255),
rgb(230,172,46,.5,maxColorValue=255),
rgb(230,172,46,.5,maxColorValue=255),
rgb(156,114,9,.5,maxColorValue=255),
rgb(156,114,9,.5,maxColorValue=255),
rgb(1,100,0,.5,maxColorValue=255),
rgb(1,100,0,.5,maxColorValue=255),
rgb(1,100,0,.5,maxColorValue=255),
rgb(106,184,106,.5,maxColorValue=255),
rgb(106,184,106,.5,maxColorValue=255),
rgb(106,184,106,.5,maxColorValue=255),
rgb(106,184,106,.5,maxColorValue=255),
rgb(106,184,106,.5,maxColorValue=255),
rgb(30,152,30,.5,maxColorValue=255),
rgb(207,235,250,.5,maxColorValue=255),
rgb(149,237,242,.5,maxColorValue=255),
rgb(112,163,186,.5,maxColorValue=255),
rgb(112,163,186,.5,maxColorValue=255),
rgb(112,163,186,.5,maxColorValue=255),
rgb(0,209,220,.5,maxColorValue=255),
rgb(0,209,220,.5,maxColorValue=255),
rgb(0,209,220,.5,maxColorValue=255),
rgb(15,124,130,.5,maxColorValue=255),
rgb(15,124,130,.5,maxColorValue=255),
rgb(15,124,130,.5,maxColorValue=255),
rgb(15,124,130,.5,maxColorValue=255),
rgb(15,124,130,.5,maxColorValue=255),
rgb(120,120,120,.5,maxColorValue=255),
rgb(146,174,47,.5,maxColorValue=255))
wisc_pal<-colorFactor(palette=color,domain=wiscland_wilms$GRIDCODE)
label8<-sprintf("<strong> %s</strong>",
wiscland_wilms$cls_desc_3)%>% lapply(htmltools::HTML)
#pal6<-colorFactor(palette=impair_cols, domain=impaired_streams$Pollutant_)
label7<-sprintf("<strong> %s</strong>",
wiscland_wilms_updates$type)%>% lapply(htmltools::HTML)
#subbasin prep
label6<-sprintf("<strong> %s</strong>",
subbasin$GRIDCODE)%>% lapply(htmltools::HTML)
#impaired streams prep
impair_cols<-c("Blue",
"#7D692A",
"#F12B0C",
"orange") #brown sediment & P
label9<-sprintf("<strong> %s</strong><br/>Pollutant: %s",
impaired_streams$Label,impaired_streams$Pollutant_)%>% lapply(htmltools::HTML)
pal6<-colorFactor(palette=impair_cols, domain=impaired_streams$Pollutant_)
p = colorFactor(palette =c("Blue","Brown","Red","Orange"),domain= c("Delist","Sediment (TSS)","Phosphorus","Phosphorus & Sediment (TSS)"),ordered= TRUE)
#septic parcel prep
resident_col<-c("#F7580D",
"#498228")
pal7<-colorFactor(palette=resident_col, domain=septic_parcel$permenent)
p1 = colorFactor(palette =c("#F7580D","#498228"),domain= c("seasonal resident","permanent resident"),ordered= TRUE)
#impaired lakes prep
label10<-sprintf("<strong> %s</strong>",
impaired_lakes$WATERBODY_)%>% lapply(htmltools::HTML)
#questions prep
label11<-sprintf("q#: %s<br/>lake: %s<br/> Q: %s <br/>who/what: %s",questions$Name, questions$Lake, questions$question ,questions$who_or_wha)%>% lapply(htmltools::HTML)
#lake additons prep
label12<-sprintf("Lake: %s<br/>
plan_9KE: %s<br/>
Lake_Type_NR10206_confirmed_by_MG: %s<br/>
Lake_Type_ROW: %s<br/>
type_comment: %s<br/>
Priority: %s<br/>
TP_critiera_NR10206: %s<br/>
area_ac: %s<br/>
depth_max_ft_ROW : %s<br/>
volume_final_ac_ft: %s<br/>
subbasins_in_SWAT: %s<br/>
subbasins_in_SWAT_correct: %s<br/>
subbasins_out_SWAT: %s<br/>
subbasins_out_SWAT_correct: %s<br/>
internally_drained_swat: %s<br/>
internally_drained_swat_correct: %s<br/>
seasonal_septic: %s<br/>
permanent_septic: %s<br/>
total_septic: %s<br/>
monitoring_station_SWIMS: %s<br/>
gsm_2015_2020: %s<br/>
count_2015_2020: %s<br/>
gsm_all: %s<br/>
count_all: %s<br/>",
lake_additions$Lake,
lake_additions$plan_9KE,
lake_additions$Lake_Type_NR10206_confirmed_by_MG,
lake_additions$Lake_Type_ROW,
lake_additions$type_comment,
lake_additions$Priority,
lake_additions$TP_critiera_NR10206,
lake_additions$area_ac,
lake_additions$depth_max_ft_ROW,
lake_additions$volume_final_ac_ft,
lake_additions$subbasins_in_SWAT,
lake_additions$subbasins_in_SWAT_correct,
lake_additions$subbasins_out_SWAT,
lake_additions$subbasins_out_SWAT_correct,
lake_additions$internally_drained_swat,
lake_additions$internally_drained_swat_correct,
lake_additions$seasonal_septic,
lake_additions$permanent_septic,
lake_additions$total_septic,
lake_additions$monitoring_station_SWIMS,
lake_additions$gsm_2015_2020,
lake_additions$count_2015_2020,
lake_additions$gsm_all,
lake_additions$count_all
)%>% lapply(htmltools::HTML)
#impaired_lakes prep
label13<-sprintf("Lake: %s<br/>
plan_9KE: %s<br/>
Lake_Type_NR10206_confirmed_by_MG: %s<br/>
Lake_Type_ROW: %s<br/>
type_comment: %s<br/>
Priority: %s<br/>
TP_critiera_NR10206: %s<br/>
area_ac: %s<br/>
depth_max_ft_ROW : %s<br/>
volume_final_ac_ft: %s<br/>
subbasins_in_SWAT: %s<br/>
subbasins_in_SWAT_correct: %s<br/>
subbasins_out_SWAT: %s<br/>
subbasins_out_SWAT_correct: %s<br/>
internally_drained_swat: %s<br/>
internally_drained_swat_correct: %s<br/>
seasonal_septic: %s<br/>
permanent_septic: %s<br/>
total_septic: %s<br/>
monitoring_station_SWIMS: %s<br/>
gsm_2015_2020: %s<br/>
count_2015_2020: %s<br/>
gsm_all: %s<br/>
count_all: %s<br/>",
impaired_lakes$Lake,
impaired_lakes$plan_9KE,
impaired_lakes$Lake_Type_NR10206_confirmed_by_MG,
impaired_lakes$Lake_Type_ROW,
impaired_lakes$type_comment,
impaired_lakes$Priority,
impaired_lakes$TP_critiera_NR10206,
impaired_lakes$area_ac,
impaired_lakes$depth_max_ft_ROW,
impaired_lakes$volume_final_ac_ft,
impaired_lakes$subbasins_in_SWAT,
impaired_lakes$subbasins_in_SWAT_correct,
impaired_lakes$subbasins_out_SWAT,
impaired_lakes$subbasins_out_SWAT_correct,
impaired_lakes$internally_drained_swat,
impaired_lakes$internally_drained_swat_correct,
impaired_lakes$seasonal_septic,
impaired_lakes$permanent_septic,
impaired_lakes$total_septic,
impaired_lakes$monitoring_station_SWIMS,
impaired_lakes$gsm_2015_2020,
impaired_lakes$count_2015_2020,
impaired_lakes$gsm_all,
impaired_lakes$count_all
)%>% lapply(htmltools::HTML)
map=leaflet()  %>%
addTiles(group = "Street View") %>%
addProviderTiles(providers$Esri.WorldImagery, group = "Satellite") %>%
#addProviderTiles(providers$USGS.USImageryTopo, group = "Topo") %>%
addProviderTiles(providers$Esri.WorldShadedRelief, group = "Relief") %>%
setView(lng = -87.870196, lat=44.104887,zoom=9) %>%
addPolylines(data=county,
color="grey",
opacity=0.8,
group="County")%>%
addPolylines(data=flow,
weight=1,
color="blue",
opacity = 0.8,
group="flow, all")%>%
addPolylines(data=swat_routing,
weight=2,
color="blue",
opacity = 0.8,
group="flow, swat routing")%>%
addPolylines(data=subbasin,
color="black",
weight=1,
opacity=0.8,
group="subbasin",
label=label6,
dashArray = "",
highlight = highlightOptions(weight = 5,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE),
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
addPolylines(data=manitowoc_co_lidar,
color="#86EF56",
weight=2,
opacity=0.8,
group="Manitowoc Co lidar delineations")%>%
addPolylines(data=manitowoc_co_lidar_private,
color="#86EF56",
weight=2,
opacity=0.8,
group="Manitowoc Co lidar delineations 2")%>%
addPolylines(data=cal_man_9KE,
color="#F49C5E",
weight=2,
opacity=0.8,
group="Cal-Man 9KE Onterra delineations")%>%
addPolylines(data=gass_hydro,
color="purple",
weight=2,
opacity=0.8,
group="gass hydro")%>%
addPolylines(data=impaired_streams,
color=~pal6(Pollutant_),
weight=2,
opacity = .8,
label=label9,
dashArray = "",
highlight = highlightOptions(weight = 5,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE),
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
addPolygons(data=impaired_lakes,
color="red",
fillOpacity=.7,
group="2020 Impaired Lakes (TP)",
label=label13,
dashArray = "",
highlight = highlightOptions(weight = 5,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE),
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
addPolygons(data=lake_additions,
color="orange",
fillOpacity=.7,
group="Additonal MG lakes",
label=label12,
dashArray = "",
highlight = highlightOptions(weight = 5,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE),
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
addPolylines(data=buffer,
color="#F45EDE",
weight=2,
opacity=0.8,
group="lakes buffer, 500ft")%>%
addPolylines(data=septic_parcel,
color=~pal7(permenent),
weight=2,
opacity=0.8,
group="septic parcels")%>%
addCircleMarkers(data=septic_pts,
radius = 5,
color=~pal7(permenent),
weight=2,
opacity=0.8,
group="septic points")%>%
addCircleMarkers(data=questions,
radius = 5,
color="blue",
weight=2,
opacity=0.8,
group="questions",
label=label11,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
addPolygons(data=wiscland_wilms,
color=~wisc_pal(GRIDCODE),
fillOpacity=.5,
group="wiscland2",
label=label8,
dashArray = "",
highlight = highlightOptions(weight = 1,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE),
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
addPolygons(data=wiscland_wilms_updates,
color="grey",
fillOpacity=.5,
group="wiscland2 KO updates",
label=label7,
dashArray = "",
highlight = highlightOptions(weight = 1,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE),
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
addLegend("bottomleft", pal=p, values=c("Delist","Sediment (TSS)","Phosphorus","Phosphorus & Sediment (TSS)"), title="2020 impaired streams",group="2020 Impaired Streams (TP & TSS)")%>%
addLegend("bottomleft", pal=p1, values=c("seasonal resident","permanent resident"), title="Septic Residency",group="septic points")%>%
addLayersControl(baseGroups = c("Street View", "Satellite"),
overlayGroups=c("subbasin","County","flow, all","flow, swat routing","gass hydro","2020 Impaired Streams (TP & TSS)","2020 Impaired Lakes (TP)","Manitowoc Co lidar delineations","Manitowoc Co lidar delineations 2","Cal-Man 9KE Onterra delineations" , "lakes buffer, 500ft","septic parcels","septic points","wiscland2","wiscland2 KO updates","questions","Additonal MG lakes"),options = layersControlOptions(collapsed = FALSE))%>%
hideGroup(c("wiscland2","flow, all"))
map
